【レスポンシブデザイン】

レスポンシブデザインとは画面サイズが異なるデバイスでも最適な表示に
切り替えるための制作手法である
CSSに記述される「メディアクエリ」と呼ばれる制御式で画面幅に合わせて
スタイルを切り替える
→ レスポンシブデザインはChromeのデベロッパーツールで確認することが可能

min-width
widthの取ることのできる最小値(下限値)
→ これ以上小さくならない幅

max-width
widthの取ることのできる最大値(上限値)
→ これ以上大きくならない幅

@media screen and (min-width: 1000px) {
 ...
}
→ 画面サイズ1000pxからここのCSSを読み込む(1000px 〜)

@media screen and (max-width: 1000px) {
 ...
}
→ 画面サイズ1000pxまではこのCSSを読み込む(〜 1000px)

<メディアクエリ>
CSSの記述に条件を加える記法
各デバイスの画面サイズごとに適用されるCSSを変更することが可能となった
メディアクエリを動作させるためにHTMLに下記のようなViewportの指定が必須となる
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<ブレイクポイント>
ブレイクポイントとはデザインが切り替わる画面幅のポイントを指す
ブレイクポイントに正確な数値は無く、COACHTECHでは下記のブレイクポイントを推奨している
・スマートフォン：～480px
・タブレット：～768px
・PC：769px～

<デスクトップファースト>
デスクトップ画面を基準としてスマホ画面やタブレット画面をメディアクエリで指定する方法
スマホ画面・タブレット画面・デスクトップ画面で共通する項目はデスクトップ画面のCSSへ記述する
デスクトップファーストはmax-width(最大値)を指定することで各ブレークポイントを設定する
[html]
<p>レスポンシブデザイン</p>
[css]
p {
  color: black;
}
@media screen and (max-width: 768px) {
  p {
    color: blue;
  }
}
@media screen and (max-width: 480px) {
  p {
    color: red;
  }
}

<モバイルファースト>
スマホ画面を基準としてタブレット画面・デスクトップ画面をメディアクエリで指定する方法
スマホ画面・タブレット画面・デスクトップ画面で共通する項目はスマホ画面のCSSに記述する
モバイルファーストではmin-width(最小値)を指定して各ブレークポイントを設定する
[html]
p {
  color: black;
}
@media screen and (min-width: 481px) {
  p {
    color: red;
  }
}
@media screen and (min-width: 769px) {
  p {
    color: blue;
  }
}

【レスポンシブデザインパターン】

<要素を拡大縮小させるパターン>
画面幅に合わせて、要素の大きさを拡大縮小するパターン
テキストや余白の大きさ、コンテンツの横幅を画面の幅に応じて
はじめから可変に設定しておくことが可能

縦横比を維持して拡大縮小
疑似要素beforeを使用してPaddingが親要素を基準としている特性を利用する
.item {
    width: 70%;
    position: relative;
}
.item::before {
    content: "temp";
    display: block;
    padding-top: 75%;
}
.item-content {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: yellow;
}

縦横比を維持せずに拡大縮小
コンテンツの横幅を基準に拡大縮小する
<img class="item" src="img/red.jpg" alt="">
.item {
  width: 100%;
  height: auto;
}

メディアクエリで拡大縮小
メディアクエリを使用してデバイスごとの要素の大きさに合わせる
<p class="item">要素</p>
.item {
  font-size: 32px;
}

@media screen and (max-width: 768px) {
  .item {
    font-size: 16px;
  }
}

@media screen and (max-width: 480px) {
  .item {
    font-size: 12px;
  }
}

レイアウトで折り返すパターン
画面幅が大きい場合 → 横並び
画面幅が小さい場合 → 縦並び
画面が小さくなるにつれ 3列 → 2列 → 1列 になるイメージ
<div class="parent">
  <div class="child"></div>
  <div class="child"></div>
  <div class="child"></div>
</div>
.parent {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
.child {
  width: 33%;
  height: 200px;
  background: #f00;
}
@media screen and (max-width: 768px) {
  .child {
    width: 49%;
  }
}
@media screen and (max-width: 480px) {
  .child {
    width: 100%;
  }
}


