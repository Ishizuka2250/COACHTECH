【例外処理】
<try..catch構文>

[tryブロック]
例外が発生した場合catchブロックに処理を遷移する
[catchブロック]
tryブロックで例外発生後、catchブロックの処理を実行する (エラーオブジェクトも引数として呼び出される)
[finallyブロック]
catchブロックの後に実行される処理

try {
  console.log("try節：この行は実行される");
  undefinedFunction();
  console.log("try節：この行は実行されない");
} catch (error) {
  console.log("catch節：この行は実行される");
  console.log(`エラーメッセージ：${error.message}`);
} finally {
  console.log("finally節：この行は実行される");
}
※catch節とfinally節のうちどちらかがあれば片方の節は省略可

<throw文>
throw文を使用することでユーザ独自の例外を投げることができる

try {
  throw new Error("例外が投げられた");
} catch (error) {
  console.log(error.message);
}

テスト問題に関する指摘事項
問題1について
filterの中でarrayを使いたかったらこれではダメですね…。変数名が同じarrayだからたまたま動いている気がします。
// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
const result = array.filter((value, index) => {return array.indexOf(value) == index});

// こんな感じが正しい
const result = array.filter((value, index, a) => {return a.indexOf(value) === index})
→ 配列arrayを引数として渡す必要があった。

問題2について
if文を簡略化して書くべき





